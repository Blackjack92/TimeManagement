<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Crystalbyte.UI;assembly=Crystalbyte.Ribbon">
    <!-- Basic colors -->
    <Color x:Key="BaseColor.White">#FFFFFF</Color>
    <Color x:Key="BaseColor.Black">#000000</Color>
    
    <!-- Gray colors  -->
    <Color x:Key="BaseColor.Gray10">#E5E5E5</Color>
    <Color x:Key="BaseColor.Gray20">#BBBBBB</Color>
    <Color x:Key="BaseColor.Gray30">#8F7F7F</Color>
    <Color x:Key="BaseColor.Gray40">#404040</Color>
    
    <!-- Blue colors -->
    <Color x:Key="BaseColor.Blue10">#51A2E0</Color>
    <Color x:Key="BaseColor.Blue20">#488FC7</Color>
    <Color x:Key="BaseColor.Blue30">#3D79A8</Color>
    <Color x:Key="BaseColor.Blue40">#32658D</Color>
    
    <!-- Basic brushes -->
    <SolidColorBrush x:Key="BaseTheme.White" Color="{StaticResource BaseColor.White}" />
    <SolidColorBrush x:Key="BaseTheme.Black" Color="{StaticResource BaseColor.Black}" />
    
    <!-- Gray brushes -->
    <SolidColorBrush x:Key="BaseTheme.Gray10" Color="{StaticResource BaseColor.Gray10}" />
    <SolidColorBrush x:Key="BaseTheme.Gray20" Color="{StaticResource BaseColor.Gray20}" />
    <SolidColorBrush x:Key="BaseTheme.Gray30" Color="{StaticResource BaseColor.Gray30}" />
    <SolidColorBrush x:Key="BaseTheme.Gray40" Color="{StaticResource BaseColor.Gray40}" />

    <!-- Blue brushes -->
    <SolidColorBrush x:Key="BaseTheme.Blue10" Color="{StaticResource BaseColor.Blue10}" />
    <SolidColorBrush x:Key="BaseTheme.Blue20" Color="{StaticResource BaseColor.Blue20}" />
    <SolidColorBrush x:Key="BaseTheme.Blue30" Color="{StaticResource BaseColor.Blue30}" />
    <SolidColorBrush x:Key="BaseTheme.Blue40" Color="{StaticResource BaseColor.Blue40}" />

    <Style TargetType="ui:RibbonButton">
        <Setter Property="Foreground" Value="{StaticResource BaseTheme.White}" />
        <Style.Triggers>
            <Trigger Property="ui:RibbonButton.IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BaseTheme.Black}" />
            </Trigger>
            <Trigger Property="ui:RibbonButton.IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ui:RibbonGroup">
        <Setter Property="Foreground" Value="{StaticResource BaseTheme.White}" />
    </Style>

    <Style TargetType="ui:RibbonPage">
        <Setter Property="Foreground" Value="{StaticResource BaseTheme.White}" />
    </Style>

    <Style TargetType="ui:RibbonTab">
        <Setter Property="Foreground" Value="{StaticResource BaseTheme.White}" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="ColumnWidth" Value="*" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource BaseTheme.Gray20}" />
    </Style>
    
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource BaseTheme.Blue40}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseTheme.White}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="5,5,10,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                        <ItemsPresenter Margin="0,0,0,0" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>